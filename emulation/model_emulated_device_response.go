/*
Emulation API

The Emulation API facilitates the retrieval of user-agent strings for HTTP, pageload, and transaction tests. It also enables the retrieval and addition of emulated devices for pageload and transaction tests.  To access Emulation API operations, the following permissions are required:  * `Settings Tests Read` for read operations. * `Settings Tests Update` for write operations. 

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emulation

import (
	"encoding/json"
    "github.com/thousandeyes/thousandeyes-sdk-go/v3/core"
	"bytes"
	"fmt"
)

// checks if the EmulatedDeviceResponse type satisfies the MappedNullable interface at compile time
var _ core.MappedNullable = &EmulatedDeviceResponse{}

// EmulatedDeviceResponse struct for EmulatedDeviceResponse
type EmulatedDeviceResponse struct {
	Category EmulatedDeviceCategory `json:"category"`
	// The width of the display of the emulated device.
	Width int32 `json:"width"`
	// The height of the display of the emulated device.
	Height int32 `json:"height"`
	// The device name
	Name *string `json:"name,omitempty"`
	// A code corresponding to the device name.
	CodeName *string `json:"codeName,omitempty"`
	// ID of the emulated device.
	Id *string `json:"id,omitempty"`
	// A list of user-agent strings for this emulated device.
	AvailableUserAgents []string `json:"availableUserAgents,omitempty"`
	// The default user-agent template to use for this device.
	DefaultUserAgentTemplate *string `json:"defaultUserAgentTemplate,omitempty"`
}

type _EmulatedDeviceResponse EmulatedDeviceResponse

// NewEmulatedDeviceResponse instantiates a new EmulatedDeviceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmulatedDeviceResponse(category EmulatedDeviceCategory, width int32, height int32) *EmulatedDeviceResponse {
	this := EmulatedDeviceResponse{}
	this.Category = category
	this.Width = width
	this.Height = height
	return &this
}

// NewEmulatedDeviceResponseWithDefaults instantiates a new EmulatedDeviceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmulatedDeviceResponseWithDefaults() *EmulatedDeviceResponse {
	this := EmulatedDeviceResponse{}
	return &this
}

// GetCategory returns the Category field value
func (o *EmulatedDeviceResponse) GetCategory() EmulatedDeviceCategory {
	if o == nil {
		var ret EmulatedDeviceCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetCategoryOk() (*EmulatedDeviceCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *EmulatedDeviceResponse) SetCategory(v EmulatedDeviceCategory) {
	o.Category = v
}

// GetWidth returns the Width field value
func (o *EmulatedDeviceResponse) GetWidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *EmulatedDeviceResponse) SetWidth(v int32) {
	o.Width = v
}

// GetHeight returns the Height field value
func (o *EmulatedDeviceResponse) GetHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *EmulatedDeviceResponse) SetHeight(v int32) {
	o.Height = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmulatedDeviceResponse) GetName() string {
	if o == nil || core.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetNameOk() (*string, bool) {
	if o == nil || core.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmulatedDeviceResponse) HasName() bool {
	if o != nil && !core.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmulatedDeviceResponse) SetName(v string) {
	o.Name = &v
}

// GetCodeName returns the CodeName field value if set, zero value otherwise.
func (o *EmulatedDeviceResponse) GetCodeName() string {
	if o == nil || core.IsNil(o.CodeName) {
		var ret string
		return ret
	}
	return *o.CodeName
}

// GetCodeNameOk returns a tuple with the CodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetCodeNameOk() (*string, bool) {
	if o == nil || core.IsNil(o.CodeName) {
		return nil, false
	}
	return o.CodeName, true
}

// HasCodeName returns a boolean if a field has been set.
func (o *EmulatedDeviceResponse) HasCodeName() bool {
	if o != nil && !core.IsNil(o.CodeName) {
		return true
	}

	return false
}

// SetCodeName gets a reference to the given string and assigns it to the CodeName field.
func (o *EmulatedDeviceResponse) SetCodeName(v string) {
	o.CodeName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmulatedDeviceResponse) GetId() string {
	if o == nil || core.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetIdOk() (*string, bool) {
	if o == nil || core.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmulatedDeviceResponse) HasId() bool {
	if o != nil && !core.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EmulatedDeviceResponse) SetId(v string) {
	o.Id = &v
}

// GetAvailableUserAgents returns the AvailableUserAgents field value if set, zero value otherwise.
func (o *EmulatedDeviceResponse) GetAvailableUserAgents() []string {
	if o == nil || core.IsNil(o.AvailableUserAgents) {
		var ret []string
		return ret
	}
	return o.AvailableUserAgents
}

// GetAvailableUserAgentsOk returns a tuple with the AvailableUserAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetAvailableUserAgentsOk() ([]string, bool) {
	if o == nil || core.IsNil(o.AvailableUserAgents) {
		return nil, false
	}
	return o.AvailableUserAgents, true
}

// HasAvailableUserAgents returns a boolean if a field has been set.
func (o *EmulatedDeviceResponse) HasAvailableUserAgents() bool {
	if o != nil && !core.IsNil(o.AvailableUserAgents) {
		return true
	}

	return false
}

// SetAvailableUserAgents gets a reference to the given []string and assigns it to the AvailableUserAgents field.
func (o *EmulatedDeviceResponse) SetAvailableUserAgents(v []string) {
	o.AvailableUserAgents = v
}

// GetDefaultUserAgentTemplate returns the DefaultUserAgentTemplate field value if set, zero value otherwise.
func (o *EmulatedDeviceResponse) GetDefaultUserAgentTemplate() string {
	if o == nil || core.IsNil(o.DefaultUserAgentTemplate) {
		var ret string
		return ret
	}
	return *o.DefaultUserAgentTemplate
}

// GetDefaultUserAgentTemplateOk returns a tuple with the DefaultUserAgentTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmulatedDeviceResponse) GetDefaultUserAgentTemplateOk() (*string, bool) {
	if o == nil || core.IsNil(o.DefaultUserAgentTemplate) {
		return nil, false
	}
	return o.DefaultUserAgentTemplate, true
}

// HasDefaultUserAgentTemplate returns a boolean if a field has been set.
func (o *EmulatedDeviceResponse) HasDefaultUserAgentTemplate() bool {
	if o != nil && !core.IsNil(o.DefaultUserAgentTemplate) {
		return true
	}

	return false
}

// SetDefaultUserAgentTemplate gets a reference to the given string and assigns it to the DefaultUserAgentTemplate field.
func (o *EmulatedDeviceResponse) SetDefaultUserAgentTemplate(v string) {
	o.DefaultUserAgentTemplate = &v
}

func (o EmulatedDeviceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmulatedDeviceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["width"] = o.Width
	toSerialize["height"] = o.Height
	if !core.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !core.IsNil(o.CodeName) {
		toSerialize["codeName"] = o.CodeName
	}
	if !core.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !core.IsNil(o.AvailableUserAgents) {
		toSerialize["availableUserAgents"] = o.AvailableUserAgents
	}
	if !core.IsNil(o.DefaultUserAgentTemplate) {
		toSerialize["defaultUserAgentTemplate"] = o.DefaultUserAgentTemplate
	}
	return toSerialize, nil
}

func (o *EmulatedDeviceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"width",
		"height",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmulatedDeviceResponse := _EmulatedDeviceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmulatedDeviceResponse)

	if err != nil {
		return err
	}

	*o = EmulatedDeviceResponse(varEmulatedDeviceResponse)

	return err
}

type NullableEmulatedDeviceResponse struct {
	value *EmulatedDeviceResponse
	isSet bool
}

func (v NullableEmulatedDeviceResponse) Get() *EmulatedDeviceResponse {
	return v.value
}

func (v *NullableEmulatedDeviceResponse) Set(val *EmulatedDeviceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEmulatedDeviceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEmulatedDeviceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmulatedDeviceResponse(val *EmulatedDeviceResponse) *NullableEmulatedDeviceResponse {
	return &NullableEmulatedDeviceResponse{value: val, isSet: true}
}

func (v NullableEmulatedDeviceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmulatedDeviceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


