/*
Event Detection API

 Event detection occurs when ThousandEyes identifies that error signals related to a component (proxy, network node, AS, server etc) have deviated from the baselines established by events. * To determine this, ThousandEyes takes the test results from all accounts groups within an organization, and analyzes that data. * Noisy test results (those that have too many errors in a short window) are removed until they stabilize, and the rest of the results are tagged with the components associated with that test result (for example, proxy, network, or server). * Next, any increase in failures from the test results and each component helps in determining the problem domain and which component may be at fault. * When this failure rate increases beyond a pre-defined threshold (set by the algorithm), an event is triggered and an email notification is sent to the user (if they've enabled email alerts).  With the Events API, you can perform the following tasks on the ThousandEyes platform: * **Retrieve Events**: Obtain a list of events and detailed information for each event. For more information about events, see [Event Detection](https://docs.thousandeyes.com/product-documentation/event-detection).

API version: 7.0.36
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eventdetection

import (
	"encoding/json"
	"github.com/thousandeyes/thousandeyes-sdk-go/v3/internal/utils"
)

// checks if the AgentLinks type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AgentLinks{}

// AgentLinks A links object containing the agent link.
type AgentLinks struct {
	Agent *Link `json:"agent,omitempty"`
}

// NewAgentLinks instantiates a new AgentLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentLinks() *AgentLinks {
	this := AgentLinks{}
	return &this
}

// NewAgentLinksWithDefaults instantiates a new AgentLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentLinksWithDefaults() *AgentLinks {
	this := AgentLinks{}
	return &this
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *AgentLinks) GetAgent() Link {
	if o == nil || utils.IsNil(o.Agent) {
		var ret Link
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentLinks) GetAgentOk() (*Link, bool) {
	if o == nil || utils.IsNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *AgentLinks) HasAgent() bool {
	if o != nil && !utils.IsNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given Link and assigns it to the Agent field.
func (o *AgentLinks) SetAgent(v Link) {
	o.Agent = &v
}

func (o AgentLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	return toSerialize, nil
}

type NullableAgentLinks struct {
	value *AgentLinks
	isSet bool
}

func (v NullableAgentLinks) Get() *AgentLinks {
	return v.value
}

func (v *NullableAgentLinks) Set(val *AgentLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentLinks(val *AgentLinks) *NullableAgentLinks {
	return &NullableAgentLinks{value: val, isSet: true}
}

func (v NullableAgentLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
